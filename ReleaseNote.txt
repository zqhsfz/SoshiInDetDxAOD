###########################
# Version 00-00-00
#
# Data: Provided by Soshi, reconstructed in 20.1, /eos/atlas/user/s/stsuno/b-layer_latency_2015/ZMUMU/data/default/281411/
# MC: use incomplete HITS file produced by Soshi (270 files), Digi / Recon / DAOD in the version and configuration specified in this setup.sh / checkout.sh
#   : user.qzeng.mc15_13TeV.361107.Zmumu.InDetDxAOD.e3601_ATLAS-R2-2015-03-15-00.v1_Nominal.try2_EXT0
#   : user.qzeng.mc15_13TeV.361107.Zmumu.InDetDxAOD.e3601_ATLAS-R2-2015-03-15-00.v1_Nominal.try2_EXT0
# EventLoop: Z->mumu selection for analysis purpose. xAH version is HTopMultilep-00-01-06-17-g7d8d9fa (7d8d9fa1514ced97f42d1f783dce82f5e5dc91f7)
###########################
# Version 00-00-01
#
# Data: Provided by Soshi, reconstructed in 20.7.3.8, /eos/atlas/user/s/stsuno/run2016/20.7.3.8/
# MC: use complete HITS file. Digi / Recon / DAOD as specified in setup.sh / checkout.sh
#   : Briefly speaking, we fix the b-layer HV to 250, along with many other pixel conditions change / variations
# EventLoop : we official move to Base,2.4.3 However, we are using an old xAODTracking, as specified in the checkout.sh
#           : xAH version should be StudyTrigTracks-00-02-01-20-g180aaa7 (180aaa767d4680d495f6a4215c8d979aa96fb7e7)
#           : Although we are using exactly the same EventLoop code as 00-00-00, it looks like the link to rdo in data is no longer broken.
#           : Also, the GhostTrack link is no longer broken
#           : But, there is report that even though the link is valid, the data would give weird results. This is NOT investigated nor addressed in this release
#           : We will investigate on this in next release
#############################
# Version 00-00-02
#
# Data: Same as 00-00-01
# MC: Same as 00-00-01, except that we are using fast version of the Bichsel model, which contains some approximation. More details on this can be found in:
#   : https://indico.cern.ch/event/509876/contribution/36/attachments/1246800/1836515/Updates.pdf
# EventLoop: Same as 00-00-01, just change the sample name
#          : We are using the same xAODAnaHelpers version as 00-00-01 (180aaa767d4680d495f6a4215c8d979aa96fb7e7)
##############################
# Version 00-01-00
# 
# General: We implement the whole pipeline of converting NNWeights to usable calibration file, checking calibration file into db, and activating it in jobOption
# A few caveate on the re-trained NN in this version:
#   1) It was trained on the same Z->mumu sample that we are testing. So this is not good.
#   2) The Z->mumu sample can provide enough stats for 1-particle training, but not enough stats for 2/3-particle training
#   3) Only number of particles and centroid positions are trained. The error of centroid position has not been trained yet
#   todo: Porivde a new input to CTIDE people, processed on JZ6W sample. It would provide enough stats and would be orthogonal to what we are testing
# MC: Same configuration as before
#   : "FastBichselOn" now defaults to "doBichsel=True,doEC=False,doBichselPU=True,nCols=5"
# Data: reprocessed now with two versions: 1) nominal 2) re-trained NN
# EventLoop:
#   : Nothing change. One should still use xAH revision StudyTrigTracks-00-02-01-20-g180aaa7 (180aaa767d4680d495f6a4215c8d979aa96fb7e7)
#
# SideNote: Samples produced under this tag, but with "NoPU_NN" appendix, is actually following 00-00-02. Those samples are the input for NN re-training, and they are always using the default NN during reconstruction step. To assure you of this, you can check the bigpanda job, and you will find that these job does not have --extfile options, while other normal  digi+recon job has (since those are needed to run customized NN)
################################
# Version 00-01-01:
#
# General: This is mainly to change the sigmoid function in TTrainedNetwork.cxx in order to be compatible with the NN weights provided by L-G (it is the same weight as 00-01-00, so this is more like a bug-fix). However, this change is by no means a permanent one. In next version, L-G will provide NN weights trained on default sigmoid function, and such hack becomes no longer necessary. The main change is in DigiRecon, NNTrained; Also edit DAOD/ a bit, but only in order to create IDTIDE derivation. It is worth mentioning that, such bug fix does not solve the resolution smearing we are seeing
################################
# Version 00-01-02:
#
# Same as 00-01-01, except we use a new NN weights with many bugs fixed. It turns out there are two problems on my side:
# 1) When preparing DAOD, I should also re-write Db (for pixel conditions etc.). The main known impact is on ToT. ToT is NOT stored in ESD.
#    As a result, it will be re-calcualted from charge
# 2) The TIDE derivation you provided earlier has some serious bias on truth residuals. A new sub-package has been created to use the receipe given by L-G.
#    Validation with NN weights trained on this new TIDE will be in next release
#
#  EventLoop: 
#     1) Bug on calcualting MaxChargeProp has been fixed
#     2) TracksPV collection has been added
################################
# Version 00-01-03:
# 
# First converging NN re-training done. There are still some bias issues, but we can get a relief on first order.
###############################
# Version 00-02-00:
# 
# Shit, I forgot what it is ... Something right before ICHEP2016
###############################
# Version ICHEP2016:
#
# EventLoop update for ICHEP2016
# xAODAnaHelpers version is hh4b-01-02-00-25-g192659d
###############################
